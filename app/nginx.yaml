---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
  labels:
    app: nginx-app
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: myweb
      app: nginx-app
  template:
    metadata:
      labels:
        tier: myweb
        app: nginx-app
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - mountPath: "/var/www/html/"
              name: nginx-pv-storage
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-conf
        - name: nginx-pv-storage
          persistentVolumeClaim:
            claimName: nfs-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    tier: myweb
    app: nginx-app
  name: nginx-svc
spec:
  selector:
    tier: myweb
    app: nginx-app
  # type: NodePort
  ports:
  - protocol: TCP
    nodePort: 31111
    port: 80
    targetPort: 80
  type: LoadBalancer
  # type: ClusterIP
  # externalIPs:
  # - 10.224.200.46 


# apiVersion: v1
# kind: Service
# metadata:
#   creationTimestamp: "2022-07-15T10:14:50Z"
#   labels:
#     component: apiserver
#     provider: myweb
#   name: nginx-svc
#   namespace: default
#   resourceVersion: "199"
#   uid: 61b6f306-0c06-41cb-ab71-e5e65ebe1c21
# spec:
#   clusterIP: 10.96.0.2
#   clusterIPs:
#   - 10.96.0.2
#   internalTrafficPolicy: Cluster
#   ipFamilies:
#   - IPv4
#   ipFamilyPolicy: SingleStack
#   ports:
#   - name: http
#     port: 80
#     protocol: TCP
#     targetPort: 6444
#   sessionAffinity: None
#   type: ClusterIP
# status:
#   loadBalancer: {}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    server {
      listen 80;
      listen [::]:80;
      access_log off;
      root /var/www/html/public;
      index index.html index.php;
      server_name example.com;
      server_tokens off;
      location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ /index.php?$args;
      }
      # pass the PHP scripts to FastCGI server listening on wordpress:9000
      location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # Change The Service Name
        fastcgi_pass 10.224.200.46:30901;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
      }
    }


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpfpm-app
  labels:
    app: phpfpm
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: phpfpm
      tier: backend
  template:
    metadata:
      labels:
        app: phpfpm
        tier: backend
    spec:
      containers:
        - name: phpfpm
          image: php:fpm-alpine
          ports:
            - containerPort: 9000
          volumeMounts:
            - mountPath: "/var/www/html/"
              name: nginx-pv-storage

      volumes:
        - name: nginx-pv-storage
          persistentVolumeClaim:
            claimName: nfs-pvc
---

apiVersion: v1
kind: Service
metadata:
  name: phpfpm
  labels:
    app: phpfpm
    tier: backend
spec:
  type: NodePort
  selector:
    app: phpfpm
    tier: phpfpm
  ports:
  - protocol: TCP
    port: 9001
    nodePort: 30901
    targetPort: 9000
